{
    "ADD": {
        "detail": "Add to Accumulator",
        "description": "Adds a byte value to a value stored in the accumulator, and stores the results back in the accumulator.",
        "syntax": " ADD A,  [operand]\n ADD A,  #41H\n ADD A,  05H\n ADD A,  @R0\n ADD A,  R2",
        "affectedFlags": "- **Carry** set if result exceedes 255, cleared if it does not\n- **Auxillary Carry** set if result exceedes 15, cleared if it does not\n- **Overflow** set if result is out of signed byte value (-128 trough 127), cleared if it does not",
        "validOperands": "- #number (e.g. #41H, #100101B)\n- Internal ram address (e.g. 05H)\n- Address stored in register @R0 or @R1\n- Register R0 trough R7"
    },
    "ADDC": {
        "detail": "Add to Accumulator with Carry flag",
        "description": "Adds a byte value and a carry flag to the accumulator, and stores the results in the accumulator.",
        "syntax": " ADDC A,  [operand]\n ADDC A,  #41H\n ADDC A,  05H\n ADDC A,  @R0\n ADDC A,  R2",
        "affectedFlags": "- **Carry** set if result exceedes 255, cleared if it does not\n- **Auxillary Carry** set if result exceedes 15, cleared if it does not\n- **Overflow** set if result is out of signed byte value (-128 trough 127), cleared if it does not",
        "validOperands": "- #number (e.g. #41H, #100101B)\n- Internal ram address (e.g. 05H)\n- Address stored in register @R0 or @R1\n- Register R0 trough R7"
    },
    "SUBB": {
        "detail": "Subtract from Accumulator With Borrow",
        "description": "Subtract the value of operand and the Carry Flag from the value of the Accumulator, and stores the results in the accumulator.",
        "syntax": " SUBB A,  [operand]\n SUBB A,  #41H\n SUBB A,  05H\n SUBB A,  @R0\n SUBB A,  R2",
        "affectedFlags": "- **Carry** set if operand value was greater than Accumulator value, cleared if it was not- **Auxillary Carry** set if lower nibble of operand (bits 0 trough 3) was greater than value of lower nibble of an Accumulator, cleared if it was not- **Overflow** set if result is out of signed byte value (-128 trough 127), cleared if it does not",
        "validOperands": "- #number (e.g. #41H, #100101B)\n- Internal ram address (e.g. 05H)\n- Address stored in register @R0 or @R1\n- Register R0 trough R7"
    }

}